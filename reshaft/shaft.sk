options:
	shaft: &8[&6&lRe&e&lSHAFT&7²&8]&f
	discord: &8[&e&lDISCORD&8]&f
	broadcast: &8[&e&lBROADCAST&8]&f
	rule: &8[&e&lRULE&8]&f
	permission: &7Insufficient Permissions
	coins: &7Insufficient &eCoins
	wrath: &7Insufficient &bWrath
	staff: &8[&e&lSTAFF&8]&f
	admin: &8[&6&lADMIN&8]&f
	world: world

function roundto(n: number, to: number) :: number:
   return floor(({_n} * 10^{_to}) + 0.5) / 10^{_to}

function format(n: number) :: text:
	set {_data} to "f,18|e,15|d,12|c,9|b,6|a,3"
	loop split {_data} at "|":
		set {_s::*} to split loop-value at ","
		{_n} >= 10 ^ {_s::2} parsed as number
		set {_nn} to roundto({_n} / 10 ^ {_s::2} parsed as number, 1)
		return "%{_nn}%%{_s::1}%"
	return "%{_n}%"

function spaced(n: text) :: text:
	set {_s::*} to split {_n} at "."
	if {_s::2} is not set:
		return a({_n})
	else:
		return "%a({_s::1})%.%{_s::2}%"
 
function a(b: text) :: text:
	if length of {_b} > 3:
		return "%a(first length of {_b} - 3 characters of {_b})%,%last 3 characters of {_b}%"
	return {_b}

on hunger meter change:
	cancel event
on portal create: 
	if group of player is not "admin":
		cancel event
on drop:
    if group of player is not "admin":
        cancel event
on place:
	if group of player is not "admin":
		cancel event
on pickup:
	cancel event
on item damage: 
	cancel event
on shoot:
	set {_p} to held item of shooter
	if projectile is set:
		set slot 16 of shooter to 64 of arrow named "&e&lQUIVER" with lore " &8╹ &7Click to Open"

on connect:
	broadcast "&8[&a+&8] &7%player%"
on disconnect:
	broadcast "&8[&c-&8] &7%player%"
on first join:
	broadcast "&8[&a+&8] &e%player% &8[&f##%size of all offline players%&8]"

command /spawn:
	trigger:
		teleport player to {spawn}

command /setspawn:
	trigger:
		if player is op:
			set {spawn} to player's position
			send "{@admin} Spawn Set to %player's position%"
		else:
			send "{@admin} {@permission}"

every 10 minutes in "{@world}":
	loop all players:
		message "{@discord} &7Join our &eDiscord &7for events, updates, and extra features (offline bonuses) <tooltip:&6Click to join!><link:https://discord.gg/y333BGhxFP>&8[&6&lCLICK HERE&8]<reset>" to loop-player

command /tps:
	trigger:
		set {_tps} to tps from the last 1 minute
		set {_t} to roundto({_tps}, 2)
		if {_t} >= 19:
			send "{@shaft} &a%{_t}% &7TPS"
		else if {_t} >= 16:
			send "{@shaft} &e%{_t}% &7TPS"
		else:
			send "{@shaft} &c%{_t}% &7TPS"

command /bc [<text>]:
	aliases: /broadcast
	trigger:
		if player is op:
			if arg-1 is set:
				broadcast colored "{@broadcast} &6%arg-1%"
			else:
				send "{@admin} /bc <msg>"
		else:
			send "{@admin} {@permission}"

command /rules: 
	trigger:
		send "{@rule} &e1. &fNo NSFW. Limit swearing."
		send "{@rule} &e2. &fEnglish only"
		send "{@rule} &e3. &fDon't spam/flood. Limit caps. "
		send "{@rule} &e4. &fRespect everyone"
		send "{@rule} &e5. &fNo advertising"
		send "{@rule} &e6. &fDon't start drama"
		send "{@rule} &e7. &fNo bugs, exploits, hacks, macros, or any unfair advantages"
		send "{@rule} &e8. &fDon't be rude, racist, or bully others"

command /pl:
	aliases: /plugins
	trigger:
		if group of player is "admin":
			execute player command "/bukkit:plugins"
		else:
			send "&fPlugins (4): &aNone&f, &aOf&f, &aYour&f, &aBusiness"

on load:
	execute console command "/mv unload survdupe_the_end"
	execute console command "/mv unload survdupe"	
	execute console command "/mv unload Rykene"	
	execute console command "/mv unload world_the_end"	
	execute console command "/mv unload build_the_end"	
	execute console command "/mv unload Xethyr"			

command /blessing [<integer>]:
	trigger:
		if player is op:
			if arg-1 is set:
				set {blessing} to arg-1
				send "{@admin} &7Set Global Blessing to %arg-1%%%"
				send "```Blessing: %arg-1%%%```" to channel with id "886738161491914772" with "ReShaft"
			else:
				send "{@admin} /blessing <integer>"
		else:
			send "{@admin} {@permission}"

# on join:
# 	if {p_level::%player%} is not set:
# 		set {p_level::%player%} to 1
# 	if {p_exp::%player%} is not set:
# 		set {p_exp::%player%} to 0
# 	if {p_nextexp::%player%} is not set:
# 		set {p_nextexp::%player%} to 10
# 	if {p_totalexp::%player%} is not set:
# 		set {p_totalexp::%player%} to 0
# 	if {p_coins::%player%} is not set:
# 		set {p_coins::%player%} to 0
# 	if {p_wrath::%player%} is not set:
# 		set {p_wrath::%player%} to 0
# 	if {p_virtue::%player%} is not set:
# 		set {p_virtue::%player%} to 100
# 	if {p_totalcoins::%player%} is not set:
# 		set {p_totalcoins::%player%} to 0
# 	if {p_totalwrath::%player%} is not set:
# 		set {p_totalwrath::%player%} to 0
# 	if {p_mkill::%player%} is not set:
# 		set {p_mkill::%player%} to 0
# 	if {p_mdeath::%player%} is not set:
# 		set {p_mdeath::%player%} to 0
# 	if {p_pkill::%player%} is not set:
# 		set {p_pkill::%player%} to 0
# 	if {p_pdeath::%player%} is not set:
# 		set {p_pdeath::%player%} to 0
# 	if {p_rebirth::%player%} is not set:
# 		set {p_rebirth::%player%} to 0
# 	if {p_damage::%player%} is not set:
# 		set {p_damage::%player%} to 1
# 	if {p_health::%player%} is not set:
# 		set {p_health::%player%} to 20
# 	if {p_maxhealth::%player%} is not set:
# 		set {p_maxhealth::%player%} to 20
# 	if {p_defense::%player%} is not set:
# 		set {p_defense::%player%} to 5
# 	if {p_maxdefense::%player%} is not set:
# 		set {p_maxdefense::%player%} to 5

command /statcheck [<player>]:
	trigger:
		if player is not op:
			stop
		if arg-1 is not set:
			send "{@admin} &7/statcheck <player>"
			stop
		if {p_level::%arg-1%} is not set:
			set {p_level::%arg-1%} to 1
		if {p_exp::%arg-1%} is not set:
			set {p_exp::%arg-1%} to 0
		if {p_nextexp::%arg-1%} is not set:
			set {p_nextexp::%arg-1%} to 10
		if {p_totalexp::%arg-1%} is not set:
			set {p_totalexp::%arg-1%} to 0
		if {p_coins::%arg-1%} is not set:
			set {p_coins::%arg-1%} to 0
		if {p_wrath::%arg-1%} is not set:
			set {p_wrath::%arg-1%} to 0
		if {p_virtue::%arg-1%} is not set:
			set {p_virtue::%arg-1%} to 100
		if {p_totalcoins::%arg-1%} is not set:
			set {p_totalcoins::%arg-1%} to 0
		if {p_totalwrath::%arg-1%} is not set:
			set {p_totalwrath::%arg-1%} to 0
		if {p_mkill::%arg-1%} is not set:
			set {p_mkill::%arg-1%} to 0
		if {p_mdeath::%arg-1%} is not set:
			set {p_mdeath::%arg-1%} to 0
		if {p_pkill::%arg-1%} is not set:
			set {p_pkill::%arg-1%} to 0
		if {p_pdeath::%arg-1%} is not set:
			set {p_pdeath::%arg-1%} to 0
		if {p_rebirth::%arg-1%} is not set:
			set {p_rebirth::%arg-1%} to 0
		if {p_damage::%arg-1%} is not set:
			set {p_damage::%arg-1%} to 1
		if {p_health::%arg-1%} is not set:
			set {p_health::%arg-1%} to 20
		if {p_maxhealth::%arg-1%} is not set:
			set {p_maxhealth::%arg-1%} to 20
		if {p_defense::%arg-1%} is not set:
			set {p_defense::%arg-1%} to 5
		if {p_maxdefense::%arg-1%} is not set:
			set {p_maxdefense::%arg-1%} to 5
		send "{@admin} &7Done Checking"

command /top [<text>]:
	trigger:
		if arg-1 is not "level" or "coins" or "totalcoins" or "wrath" or "totalwrath" or "totalstigma" or "pkill" or "mkill" or "rebirth" or "maxhealth" or "damage":
			send "{@shaft} /top <level coins totalcoins wrath totalwrath totalstigma pkill mkill rebirth>"
		else:
			loop {p_%arg-1%::*}:
				add 1 to {_size}
				if {_low.to.high.list::%loop-value%} is not set:
					set {_low.to.high.list::%loop-value%} to loop-index
				else:
					set {_n} to 0
					loop {_size} times:
						set {_n} to {_n}+1
						{_low.to.high.list::%loop-value-1%.%{_n}%} is not set
						set {_low.to.high.list::%loop-value-1%.%{_n}%} to loop-index
						stop loop
		wait 1 tick
		set {_n} to size of {_low.to.high.list::*}
		loop {_low.to.high.list::*}:
			set {_high.to.low.list::%{_n}%} to loop-value
			set {_n} to {_n}-1
		wait 1 tick
		set {_i} to 0
		send "&7&m-----------&r &8[ &e&lTOP &8] &7&m-------------"
		loop {_high.to.low.list::*}:
			if arg-1 is "level":
				set {_label} to "&e:L%{p_%arg-1%::%loop-value%}%"
			else if arg-1 is "coins" or "totalcoins":
				set {_coins} to format({p_%arg-1%::%loop-value%})
				set {_label} to "&e%{_coins}% &7coins"
			else if arg-1 is "wrath" or "totalwrath":
				set {_wrath} to format({p_%arg-1%::%loop-value%})
				set {_label} to "&e%{_wrath}% &7wrath"
			else if arg-1 is "totalstigma":
				set {_stigma} to format({p_%arg-1%::%loop-value%})
				set {_label} to "&e%{_stigma}% &7stigma"
			else if arg-1 is "mkill" or "pkill":
				set {_label} to "&e%{p_%arg-1%::%loop-value%}% &7kills"
			else if arg-1 is "rebirth":
				set {_label} to "&e%{p_%arg-1%::%loop-value%}% &7times"
			else if arg-1 is "maxhealth":
				set {_label} to "&c%{%arg-1%::%loop-value%}% &c❤"
			else if arg-1 is "damage":
				set {_label} to "&c%{%arg-1%::%loop-value%}% &cdmg"
			add 1 to {_topnumber}
			set {_player} to "%loop-value%" parsed as offline player
			send "&7%{_topnumber}%&7. %{_player}%: %{_label}%"
			add 1 to {_i}
			if {_topnumber} > 10:
				stop
		send "&7&m--------------------------------"

# ======== PLAYER INVENTORY ======== PLAYER INVENTORY ========
# ======== PLAYER INVENTORY ======== PLAYER INVENTORY ========
# ======== PLAYER INVENTORY ======== PLAYER INVENTORY ========

command /new [<text>]:
	trigger:
		if player is op:
			if arg-1 is not set:
				new(player)
			else if arg-1 is "center":
				newcenter(player)
		else:
			send "{@admin} {@permission}"

function new(p: player):
	set helmet of {_p} to {1_helmet}
	set chestplate of {_p} to {1_chestplate}
	set leggings of {_p} to {1_leggings}
	set boots of {_p} to {1_boots}
	set slot 0 of {_p} to {1_sword}
	set slot 1 of {_p} to {1_bow}
	set slot 40 of {_p} to {1_shield}
	set slot 8 of {_p} to skull of {_p} named "&e&lMENU" with lore " &8╹ &7Click to Open"

function newcenter(p: player):
	set slot 12 of {_p} to {pegasuslock}
	set slot 13 of {_p} to {athenalock}
	set slot 14 of {_p} to {poseidonlock}
	set slot 21 of {_p} to {apollolock}
	set slot 22 of {_p} to {hadeslock}
	set slot 23 of {_p} to {kronoslock}
	set slot 30 of {_p} to {talarialock}
	set slot 31 of {_p} to {zeuslock}
	set slot 32 of {_p} to {hermeslock}