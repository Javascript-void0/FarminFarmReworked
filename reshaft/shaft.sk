options:
	shaft: &8[&6&lRe&e&lSHAFT&8]&7²&f
	chat: &8[&6&lCHAT&8]&f
	discord: &8[&e&lDISCORD&8]&f
	broadcast: &8[&e&lBROADCAST&8]&f
	rule: &8[&e&lRULE&8]&f
	permission: &8[&cjavascript:void(0)&8] &cInsufficient Permissions
	staff: &8[&e&lSTAFF&8]&f
	world: build

on hunger meter change:
	cancel event
on death: 
	cancel event
on damage: 
	cancel event
on portal create: 
	if group of player is not "admin":
		cancel event
on drop:
    if group of player is not "admin":
        cancel event
on inventory click:
	if group of player is not "admin":
		cancel event
on connect:
	broadcast "&8[&a+&8] &7%player%"
on disconnect:
	broadcast "&8[&c-&8] &7%player%"
on first join:
	broadcast "&8[&a+&8] &e%player% &8[&f##%size of all offline players%&8]"

command /bc [<text>]:
	aliases: /broadcast
	trigger:
		if player is op:
			if arg-1 is set:
				broadcast colored "{@broadcast} &6%arg-1%"
			else:
				send "{@broadcast} /bc <msg>"
		else:
			send "{@permission}"

command /rules: 
	trigger:
		send "{@rule} &e1. &fNo NSFW. Limit swearing."
		send "{@rule} &e2. &fEnglish only"
		send "{@rule} &e3. &fDon't spam/flood. Limit caps. "
		send "{@rule} &e4. &fRespect everyone"
		send "{@rule} &e5. &fNo advertising"
		send "{@rule} &e6. &fDon't start drama"
		send "{@rule} &e7. &fNo bugs, exploits, hacks, macros, or any unfair advantages"
		send "{@rule} &e8. &fDon't be rude, racist, or bully others"

command /pl:
	aliases: /plugins
	trigger:
		if group of player is "admin":
			execute console command "/sudo %player% bukkit:plugins"
		else:
			send "&fPlugins (4): &aNone&f, &aOf&f, &aYour&f, &aBusiness"

every 1 second in "{@world}":
	loop all players:
		wipe loop-player's sidebar
		set name of sidebar of loop-player to "&6&lRe&e&lSHAFT&7²"
		set score "    " in sidebar of loop-player to 12
		set score " &e&lPLAYER &7(:L&769)" in sidebar of loop-player to 11
		set score "   &7Class: &f<none>" in sidebar of loop-player to 10
		set score "   &7Gold: &f<none>" in sidebar of loop-player to 9
		set score "   &7Gems: &f<none>" in sidebar of loop-player to 8
		set score "   &7Medals: &f<none>" in sidebar of loop-player to 7
		set score "   &7Tokens: &f<none>" in sidebar of loop-player to 6
		set score "   &7Multiplier: &fx1.0" in sidebar of loop-player to 5
		set score "  " in sidebar of loop-player to 4
		set score " &e&lSERVER &7(%number of all players%/10)" in sidebar of loop-player to 3
		set score "   &7TPS: &f%tps from the last 1 minute%" in sidebar of loop-player to 2
		set score "   &7Blessing: &f<none>%%" in sidebar of loop-player to 1
		set score " " in sidebar of loop-player to 0

# ======== STAFF COMMANDS ======== STAFF COMMANDS ========
# ======== STAFF COMMANDS ======== STAFF COMMANDS ========
# ======== STAFF COMMANDS ======== STAFF COMMANDS ========

command /staffchat [<text>]:
	aliases: /sc
	permission: sc.staffchat
	permission message: {@permission}
	trigger:
		if arg-1 is not set:
			if {staffchat::%player%} is not set:
				set {staffchat::%player%} to true
				send "{@staff} &7Toggle &aENABLED"
			else:
				delete {staffchat::%player%}
				send "{@staff} &7Toggle &cDISABLED"
		else:
			loop all players:
				if loop-player has permission "sc.staffchat":
					send colored "{@staff} %player's prefix%&r%player's display name%&7: &r%arg 1%" to loop-player
on chat:
	if {staffchat::%player%} is set:
		cancel event
		loop all players:
			if loop-player has permission "sc.staffchat":
				send colored "{@staff} %player's prefix%&r%player's display name%&7: &r%message%" to loop-player
every 1 second in "{@world}":
	loop all players:
		if {staffchat::%loop-player%} is true:
			send action bar "{@staff} &aEnabled" to loop-player
on chat:
	if player is op:
		stop
	else:
		if {SkCheat::spam.m::%uuid of player%} is message:
			add 1 to {SkCheat::spam.p::%uuid of player%}
			if {SkCheat.spam.notify::%uuid of player%} is not set:
				set {SkCheat.spam.notify::%uuid of player%} to now
			if difference between {SkCheat.spam.notify::%uuid of player%} and now is more than 1 second:
				if {SkCheat::spam.p::%uuid of player%} is greater than 6:
					kick the player due to "{@shaft} You were spamming."
					clear {SkCheat::spam.p::%uuid of player%}
		else:
			set {SkCheat::spam.m::%uuid of player%} to message	
on join:
	clear {SkCheat::spam.p::%uuid of player%}
	clear {SkCheat::spam.m::%uuid of player%}
on disconnect:
	clear {SkCheat::spam.p::%uuid of player%}
	clear {SkCheat::spam.m::%uuid of player%}
command /mutechat:
	permission: chat.mute
	permission message: {@permission}
	trigger:
		if {Globalchat} is not set:
			set {Globalchat} to true
			broadcast "{@chat} &7Chat &cMUTED &7by %player%"
			stop trigger
		if {Globalchat} is set:
			clear {Globalchat}
			broadcast "{@chat} &7Chat &aUNMUTED &7by %player%"
on chat:
	if {Globalchat} is true:
		if player has permission "chat.mute.bypass":
			stop trigger
		else:
			cancel event
			send "{@chat} &cChat is currently muted."
command /clearchat:
	permission: clearchat
	permission message: {@permission}
	aliases: /cc
	trigger:
		loop 100 times:
			broadcast ""
		send "{@chat} &aYou have cleared the chat"

# ======== MESSAGE COUNT (ARCHIVED) ======== MESSAGE COUNT (ARCHIVED) ========
# ======== MESSAGE COUNT (ARCHIVED) ======== MESSAGE COUNT (ARCHIVED) ========
# ======== MESSAGE COUNT (ARCHIVED) ======== MESSAGE COUNT (ARCHIVED) ========

on load:
	if {global.message} is not set:
		set {global.message} to 0
on chat:
	if {message::%player%} is not set:
		set {message::%player%} to 1
		add 1 to {global.message}
	else:
		add 1 to {message::%player%}
		add 1 to {global.message}
command /top:
    trigger:
        loop {message::*}:
            add 1 to {_size}
            if {_low.to.high.list::%loop-value%} is not set:
                set {_low.to.high.list::%loop-value%} to loop-index
            else:
                set {_n} to 0
                loop {_size} times:
                    set {_n} to {_n}+1
                    {_low.to.high.list::%loop-value-1%.%{_n}%} is not set
                    set {_low.to.high.list::%loop-value-1%.%{_n}%} to loop-index
                    stop loop
        wait 1 tick
        set {_n} to size of {_low.to.high.list::*}
        loop {_low.to.high.list::*}:
            set {_high.to.low.list::%{_n}%} to loop-value
            set {_n} to {_n}-1
        wait 1 tick
        set {_i} to 0
        send "&7&m-----------&8[ &e&lTOP &8]&7&m-------------"
        loop {_high.to.low.list::*}:
            add 1 to {_topnumber}
            set {_player} to "%loop-value%" parsed as offlineplayer
            send "&7%{_topnumber}%&8: &e%{_player}% &8: &7%{message::%loop-value%}% &7msgs"
            add 1 to {_i}
            if {_topnumber} > 10:
                stop
        send "&7&m------------------------------"
command /count [<offline player>] [<text>] [<integer>]:
	trigger:
		if arg-1 is not set:
			send "/count <offline player>"
		else if arg-2 is set:
			if player is op:
				if arg-2 is "reset":
					set {_o} to {message::%arg-1%}
					set {message::%arg-1%} to 0
					send "Reset %{_o}% Messages of %arg-1% to 0"
				else if arg-3 is set:
					if arg-2 is "add":
						set {_n} to arg-3
						add {_n} to {message::%arg-1%}
						send "Added %{_n}% Messages to %arg-3% to %{message::%arg-1%}%"
					if arg-2 is "remove":
						set {_o} to {message::%arg-1%}
						set {_n} to arg-3
						remove {_n} from {message::%arg-1%}
						if {message::%arg-1%} is less than 0:
							set {message::%arg-1%} to 0
						send "Removed %{_n}% Messages from %{_o}% to %{message::%arg-1%}%"
					if arg-2 is "set":
						set {_n} to arg-3
						set {message::%arg-1%} to {_n}
						send "Set Messages of %arg-1% to %arg-3%"
				else:
					send "/count <player> [option] <integer>"
			else:
				send "no permission"
		else:
			send "%{message::%arg-1%}%"

# ======== HEX/RGB ======== HEX/RGB ========
# ======== HEX/RGB ======== HEX/RGB ========
# ======== HEX/RGB ======== HEX/RGB ========

on load:
	set {hex::*} to split "0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f|k|l|m|n|o|r" at "|"
 
function rgbToHex(values: numbers) :: string:
	loop {_values::*}:
		set {_r} to "%{_r} ? ""<##""%%{hex::%(( (round(loop-value)) - mod((round(loop-value)), 16)) / 16 + 1)%} ? """"%%{hex::%mod((round(loop-value)), 16) + 1%} ? """"%"
	return colored "%{_r}%>"

function gradient(input: string, color-from: integers, color-to: integers) :: string:
	loop {_color-from::*}:
		set {_i::%loop-index%} to ({_color-to::%loop-index%} - loop-value) / length of {_input}
	loop length of {_input} times:
		if subtext of {_input} from indices loop-number - 1 to loop-number - 1 = "§":
			set {_format} to "%{_format} ? """"%&%subtext of {_input} from indices loop-number to loop-number%" if {hex::*} contains subtext of {_input} from indices loop-number to loop-number
			clear {_format} if subtext of {_input} from indices loop-number to loop-number = "r"
			continue loop
		set {_r} to "%{_r} ? """"%%rgbToHex({_color-from::*})%%{_format} ? """"%%subtext of {_input} from indices loop-number to loop-number%"
		set {_color-from::*} to ({_color-from::1} + {_i::1}), ({_color-from::2} + {_i::2}) and ({_color-from::3} + {_i::3})
	return colored {_r}

# ======== CHAT FORMAT ======== CHAT FORMAT ========
# ======== CHAT FORMAT ======== CHAT FORMAT ========
# ======== CHAT FORMAT ======== CHAT FORMAT ========

on chat:
	set {_player} to display name of player
	if group of player is "admin":
		set {_prefix} to "&6&lADMIN&8]&r &8[&e%{message::%player%}%"
	else if group of player is "mod":
		set {_prefix} to "&e&lMOD&8]&r &8[&e%{message::%player%}%"
	else if {message::%player%} is greater than 1000:
		set {_prefix} to colored "%rgbToHex(153, 153, and 255)%%{message::%player%}%"
	else if {message::%player%} is greater than 900:
		set {_prefix} to colored "%rgbToHex(204, 204, and 255)%%{message::%player%}%"
	else if {message::%player%} is greater than 800:
		set {_prefix} to colored "%rgbToHex(255, 255, and 51)%%{message::%player%}%"
	else if {message::%player%} is greater than 700:
		set {_prefix} to colored "%rgbToHex(255, 255, and 102)%%{message::%player%}%"
	else if {message::%player%} is greater than 600:
		set {_prefix} to colored "%rgbToHex(255, 255, and 153)%%{message::%player%}%"
	else if {message::%player%} is greater than 500:
		set {_prefix} to colored "%rgbToHex(255, 255, and 204)%%{message::%player%}%"
	else if {message::%player%} is greater than 400:
		set {_prefix} to colored "%rgbToHex(204, 255, and 51)%%{message::%player%}%"
	else if {message::%player%} is greater than 300:
		set {_prefix} to colored "%rgbToHex(204, 255, and 102)%%{message::%player%}%"
	else if {message::%player%} is greater than 200:
		set {_prefix} to colored "%rgbToHex(204, 255, and 153)%%{message::%player%}%"
	else if {message::%player%} is greater than 100:
		set {_prefix} to colored "%rgbToHex(204, 255, and 204)%%{message::%player%}%"
	else:
		set {_prefix} to colored "%rgbToHex(204, 255, and 229)%%{message::%player%}%"

	set {_slotList::hand} to index of player's hotbar slot
	set {_keywordList::hand::*} to "[hand]", "[item]" and "[i]"
	set {_slotList::offhand} to 40
	set {_keywordList::offhand::*} to "[offhand]"
	set {_slotList::helmet} to 39
	set {_keywordList::helmet::*} to "[helmet]", "[helm]", "[cap]" and "[head]"
	set {_slotList::chestplate} to 38
	set {_keywordList::chestplate::*} to "[chestplate]", "[tunic]" and "[chest]"
	set {_slotList::leggings} to 37
	set {_keywordList::leggings::*} to "[leggings]", "[pants]" and "[legs]"
	set {_slotList::boots} to 36
	set {_keywordList::boots::*} to "[boots]" and "[feet]"
	loop indices of {_keywordList::*}:
		loop {_keywordList::%loop-value%::*}:
			message contains loop-value-2
			add {_slotList::%loop-value-1%} to {_items::*}
			add loop-value-2 to {_keywords::*}
			exit 1 loop
	if size of {_keywords::*} > 0:
		cancel event
		set {_message} to message
		loop {_keywords::*}:
			loop indices of {_keywordList::*}:
				{_keywordList::%loop-value-2%::*} contains loop-value-1
				loop {_keywordList::%loop-value-2%::*}:
					loop-value-3 is not loop-value-1
					replace all loop-value-3 with "" in {_message}
			set {_messages::*} to {_message} split at "%loop-value%"
			set {_temp} to {_messages::1}
			delete {_messages::1}
			set {_message} to "%{_temp}%%loop-value%%join {_messages::*} with """"%"
			replace all loop-value with "{CIplaceholder}:{%loop-index%}:{CIplaceholder}" in {_message}
		set {_messages::*} to {_message} split at "{CIplaceholder}"
		loop {_messages::*}:
			set {_messages::%loop-index%} to a new text component of "%loop-value%"
			"%loop-value%" is ":{1}:", ":{2}:", ":{3}:", ":{4}:", ":{5}:" or ":{6}:"
			set {_itemIndex} to subtext of "%loop-value%" from characters 3 to 3
			set {_itemIndexes::%{_itemIndex}%} to loop-index
		loop {_items::*}:
			delete {_name}
			set {_item} to loop-value
			if {_item} is a number:
				set {_item} to slot {_item} of player's inventory
			if {_item} is not set:
				set {_messages::%{_itemIndexes::%loop-index%}%} to a new text component of "&7%{_keywords::%loop-index%}%"
			else if {_item} is not air:
				set {_name} to name of {_item}
				if {_name} is not set:
					set {_name} to a new translate component from {_item}
				set {_itemName} to "&8[&r%{_name}%&8]&r"
				set {_itemName} to a new text component of "%{_itemName}%"
				set hover event of {_itemName} to a new hover event showing {_item}
				set {_messages::%{_itemIndexes::%loop-index%}%} to {_itemName}
			else:
				set {_messages::%{_itemIndexes::%loop-index%}%} to a new text component of "&7%{_keywords::%loop-index%}%"
		set {_messageFormat::*} to message format split at "[message]"
		replace "<[player]>" with "%{_player}%&7:&r" in {_messageFormat::1}
		replace "[" with "" in {_messageFormat::*}
		replace "]" with "" in {_messageFormat::*}
		if message format contains message:
			set {_messageFormat::*} to message format split at message
		set {_temp} to a new text component of "%{_messageFormat::1}%"
		set {_p} to a new text component of "&8[%{_prefix}%&8] &r"
		delete {_messageFormat::1}
		loop all players:
			send components {_p}, {_temp}, {_messages::*} and {_messageFormat::*} to loop-player
		send components {_p}, {_temp}, {_messages::*} and {_messageFormat::*} to console
	else:
		set the chat format to colored "&8[%{_prefix}%&8] &r%{_player}%&7: &7%message%"