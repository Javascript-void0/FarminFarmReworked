options:
	shaft: &8[&c&lRESHAFT&8]
	permission: &7Insufficient Permissions
	admin: &8[&c&lADMIN&8]
	world: world

on load:
	execute console command "/mv unload survdupe_the_end"
	execute console command "/mv unload dupemp3"
	execute console command "/mv unload Xethyr"
	execute console command "/mv unload dupemp3_the_end"
	execute console command "/mv unload Ambarina"
	execute console command "/mv unload Rykene"
	execute console command "/mv unload world_the_end"
	execute console command "/mv unload world"
	execute console command "/mv unload survdupe"
	execute console command "/mv unload dupemp3_the_nether"
	execute console command "/mv unload voidworld"
	execute console command "/mv unload build_the_end"

function removeEnch(i: item, e: enchantment):
	loop enchantments of {_i}:
		add "%loop-value%" parsed as an enchantment type to {_e::*}
	disenchant {_i}
	loop {_e::*}:
		if "%loop-value%" does not contain "%{_e}%":
			enchant {_i} with loop-value

on tab complete of "/test":
	if player's held item is sword:
		set tab completions for position 1 to "sharpness", "looting", "mending", and "binding"
		
command /test [<text>] [<integer>]:
	trigger:
		if player is op:
			if player's held item is not set:
				send "{@admin} &7You must be holding a tool"
			else if player's held item is not pickaxe or sword:
				send "{@admin} &7You can not enchant that"
			else if player's held item is sword:
				if arg-1 is not "sharpness" or "looting" or "mending" or "binding":
					send "{@admin} /loreenchant <sharpness sweeping looting fireaspect mending binding>"
				else if arg-2 is not set:
					send "{@admin} /loreenchant <%arg-1%> <integer>"
				else:
					if arg-1 is "sharpness":
						# set {_split::*} to uncoloured line 2 of player's tool's lore parsed as " ┃ Sharpness: %number%"
						# send "%{_split::1}%" to the player
						set line 2 of player's tool's lore to " &8┃ &7Sharpness: &x&d&5&5&6&5&6%arg-2%"					
						removeEnch(player's tool, sharpness)
						enchant player's tool with "sharpness %arg-2%" parsed as enchantment type
					else if arg-1 is "looting":
						set line 3 of player's tool's lore to " &8┃ &7Looting: &x&d&5&5&6&5&6%arg-2%"					
						removeEnch(player's tool, looting)
						enchant player's tool with "looting %arg-2%" parsed as enchantment type
					else if arg-1 is "mending":
						set line 4 of player's tool's lore to " &8┃ &7Mending: &x&d&5&5&6&5&6%arg-2%"					
						removeEnch(player's tool, mending)
						enchant player's tool with "mending %arg-2%" parsed as enchantment type
					else if arg-1 is "binding":
						set line 5 of player's tool's lore to " &8╹ &7Binding: &x&d&5&5&6&5&6%arg-2%"					
						removeEnch(player's tool, curse of binding)
						enchant player's tool with "curse of binding %arg-2%" parsed as enchantment type
		else:
			send "{@admin} {permission}"

command /listenchants:
	trigger:
		if player is op:
			loop enchantments of player's held item:
				send "%loop-value%"
		else:
			send "{@admin} {@permission}"