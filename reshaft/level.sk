options:
	shaft: &8[&6&lRe&e&lSHAFT&7Â²&8]&f

function expAdd(p: player, n: integer):
	add {_n} to {p_coins::%{_p}%}
	add {_n} to {p_totalcoins::%{_p}%}
	add 1 to {p_totalexp::%{_p}%}
	add 1 to {p_exp::%{_p}%}

on break:
	if xp of player is less than 996:
		add 1 to xp of player

every 5 ticks:
	loop all players:
		if xp of loop-player is greater than 910:
			remove 1 from xp of loop-player

on break: 
	cancel drops
	add 0.1 to {p_exp::%player%}
	if {p_exp::%player%} is greater or equal to {p_nextexp::%player%}:
		set {_before} to {p_level::%player%}
		set {p_exp::%player%} to 0
		add 1 to {p_level::%player%}
		set {p_nextexp::%player%} to ({p_level::%player%} * 2) + 10
		set {action::%player%} to "Level Up!"
		send player title "&e&lLEVEL UP" with subtitle "&7%{_before}% > %{p_level::%player%}%" for 3 seconds
		set {actionBlock::%player%} to location of event-block
		wait 2 seconds
		{actionBlock::%player%} is location of event-block
		delete {action::%player%}
		delete {actionBlock::%player%}
	else:
		set {action::%player%} to "+0.1 exp"
		set {actionBlock::%player%} to location of event-block
		wait 2 seconds
		{actionBlock::%player%} is location of event-block
		delete {action::%player%}
		delete {actionBlock::%player%}
	add 1 to {p_coins::%player%}

on damage:
	attacker is player
	victim is not a player
	add 3 to {p_exp::%attacker%}
	if {p_exp::%attacker%} is greater or equal to {p_nextexp::%attacker%}:
		set {_before} to {p_level::%attacker%}
		set {p_exp::%attacker%} to 0
		add 1 to {p_level::%attacker%}
		set {p_nextexp::%attacker%} to {p_level::%attacker%} * 2
		set {action::%attacker%} to "Level Up!"
		send attacker title "&e&lLEVEL UP" with subtitle "&7%{_before}% > %{p_level::%attacker%}%" for 3 seconds
		wait 2 seconds
		delete {action::%attacker%}
	else:
		set {action::%attacker%} to "+3 exp"
		wait 2 seconds
		delete {action::%attacker%}
	add 1 to {p_coins::%attacker%}