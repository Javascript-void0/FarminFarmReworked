options:
	shaft: &8[&6&lRe&e&lSHAFT&7Â²&8]&f
	permission: &7Insufficient Permissions
	admin: &8[&6&lADMIN&8]&f
	world: world

function adminFormat(n: number) :: text:
	set {_data} to "f,18|e,15|d,12|c,9|b,6|a,3"
	loop split {_data} at "|":
		set {_s::*} to split loop-value at ","
		{_n} >= 10 ^ {_s::2} parsed as number
		set {_nn} to adminRound({_n} / 10 ^ {_s::2} parsed as number, 1)
		return "%{_nn}%%{_s::1}%"
	return "%{_n}%"

function adminRound(n: number, to: number) :: number:
   return floor(({_n} * 10^{_to}) + 0.5) / 10^{_to}


command /modify [<offline player>] [<text>] [<text>] [<integer>]:
	trigger:
		if player is op:
			if arg-1 is not set:
				send "{@admin} &f/modify &f<player>"
				stop
			else if arg-2 is not "level" or "coins" or "totalcoins" or "wrath" or  "totalwrath" or "exp" or "nextexp" or "totalexp" or "mkill" or "mdeath" or "pkill" or "pdeath" or "rebirth" or "all" or "maxhealth" or "health" or "damage" or "defense" or "maxdefense":
				send "{@admin} &f/modify <%arg-1%> &f<level exp nextexp totalexp coins totalcoins wrath totalwrath mkill mdeath pkill pdeath rebirth maxhealth health damage all defense maxdefense>"
				stop
			else if arg-3 is not "add" or "remove" or "set" or "reset":
				if arg-2 is "reset":
					send "{@admin} &f/modify <%arg-1%> <%arg-2%> &f<reset>"
				else:
					send "{@admin} &f/modify <%arg-1%> <%arg-2%> &f<add remove set reset>"
				stop
			else if arg-4 is not set:
				if arg-3 is not "reset":
					send "{@admin} &f/modify <%arg-1%> <%arg-2%> <%arg-3%> &f<integer>"
					stop
			if arg-3 is "add":
				add arg-4 to {p_%arg-2%::%arg-1%}
				set {_nn} to adminFormat(arg-4)
				send "{@admin} &7Added &e%{_nn}% &7to &e%arg-1%&e's &7%arg-2%"
			else if arg-3 is "remove":
				if arg-2 is "level":
					if arg-4 is greater than {p_level::%arg-1%} - 1:
						set {_n} to {p_level::%arg-1%} - 1
					else:
						set {_n} to arg-4
				else if arg-2 is "maxhealth":
					if arg-4 is greater than {p_maxhealth::%arg-1%} - 20:
						set {_n} to {p_maxhealth::%arg-1%} - 20
					else:
						set {_n} to arg-4
				else if arg-2 is "health":
					if arg-4 is greater than {p_health::%arg-1%} - 1:
						set {_n} to {p_health::%arg-1%} - 1
					else:
						set {_n} to arg-4
				else if arg-2 is "damage":
					if arg-4 is greater than {p_damage::%arg-1%} - 1:
						set {_n} to {p_damage::%arg-1%} - 1
					else:
						set {_n} to arg-4
				else if arg-4 is greater than {p_%arg-2%::%arg-1%}:
					set {_n} to {p_%arg-2%::%arg-1%}
				else:
					set {_n} to arg-4
				remove {_n} from {p_%arg-2%::%arg-1%}
				set {_nn} to adminFormat({_n})
				send "{@admin} &7Removed &e%{_nn}% &7from &e%arg-1%&e's &7%arg-2%"
			else if arg-3 is "set":
				if arg-2 is "level":
					if arg-4 is less than 1:
						set {_n} to 1
					else:
						set {_n} to arg-4
				else if arg-2 is "maxhealth":
					if arg-4 is less than 20:
						set {_n} to 20
					else:
						set {_n} to arg-4
				else if arg-2 is "health":
					if arg-4 is less than 1:
						set {_n} to 1
					else:
						set {_n} to arg-4
				else if arg-2 is "damage":
					if arg-4 is less than 1:
						set {_n} to 1
					else:
						set {_n} to arg-4
				else if arg-4 is less than 0:
					set {_n} to 0
				else:
					set {_n} to arg-4
				set {p_%arg-2%::%arg-1%} to {_n}
				set {_nn} to adminFormat({_n})
				send "{@admin} &7Set &e%arg-1%&e's &7%arg-2% &7to &e%{_nn}%"
			else if arg-3 is "reset":
				if arg-2 is "level":
					set {_n} to 1
				else if arg-2 is "all":
					set {p_level::%arg-1%} to 1
					set {p_coins::%arg-1%} to 0
					set {p_totalcoins::%arg-1%} to 0
					set {p_totalwrath::%arg-1%} to 0
					set {p_wrath::%arg-1%} to 0
					set {p_exp::%arg-1%} to 0
					set {p_totalexp::%arg-1%} to 0
					set {p_mkill::%arg-1%} to 0
					set {p_mdeath::%arg-1%} to 0
					set {p_pkill::%arg-1%} to 0
					set {p_pdeath::%arg-1%} to 0
					set {p_rebirth::%arg-1%} to 0
					set {p_maxhealth::%arg-1%} to 20
					set {p_health::%arg-1%} to 20
					set {p_damage::%arg-1%} to 1
					send "{@admin} &7Reset all for &e%arg-1%"
					stop
				else:
					set {_n} to 0
				set {p_%arg-2%::%arg-1%} to {_n}
				send "{@admin} &7Reset &e%arg-1%&e's &7%arg-2%"
		else:
			send "{@admin} {@permission}"
			
command /loreenchant [<text>] [<integer>]:
	trigger:
		if player is op:
			if player's held item is not set:
				send "{@admin} &7You must be holding a tool"
			if player's held item is pickaxe or axe or shovel:
				if arg-1 is not "unbreaking" or "efficiency" or "fortune" or "excavate" or "mending" or "binding":
					send "{@admin} /loreenchant <unbreaking efficiency efficiency fortune excavate mending binding>"
			else if player's held item is bow:
				if arg-1 is not "power" or "punch" or "flame":
					send "{@admin} /loreenchant <power punch flame>"
			else if player's held item is crossbow:
				if arg-1 is not "quickcharge" or "piercing" or "multishot":
					send "{@admin} /loreenchant <quickcharge piercing multishot>"
			else if player's held item is trident:
				if arg-1 is not "smite" or "knockback" or "channeling":
					send "{@admin} /loreenchant <smite knockback channeling>"
		else:
			send "{@admin} {permission}"