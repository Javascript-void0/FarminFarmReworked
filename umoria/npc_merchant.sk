options:
	color: <##B4C788>
	prefix: &8[<##B4C788>&lUMORIA&8]&7
	permission: &7Insufficient Permissions
	admin: &8[<##B4C788>&lADMIN&8]&7
	coins: &7Insufficient <##B4C788>Coins
	wrath: &7Insufficient <##B4C788>Wrath
	world: world

command /merchant [<number>] [<text>] [<text>] [<text>]:
	trigger:
		arg-1 is {sessionid::%player%}
		set {sessionid::%player%} to random integer between 1000 and 9999
		if arg-2 is "buy":
			set {_buy} to "{@color}"
			set {_sell} to "&7"
		else if arg-2 contains "sell":
			set {_buy} to "&7"
			set {_sell} to "{@color}"
		if arg-3 is "1":
			set {_1} to "{@color}"
			set {_5} to "&7"
			set {_32} to "&7"
			set {_all} to "&7"
		else if arg-3 is "5":
			set {_1} to "&7"
			set {_5} to "{@color}"
			set {_32} to "&7"
			set {_all} to "&7"
		else if arg-3 is "32": 
			set {_1} to "&7"
			set {_5} to "&7"
			set {_32} to "{@color}"
			set {_all} to "&7"
		else if arg-3 is "all":
			set {_1} to "&7"
			set {_5} to "&7"
			set {_32} to "&7"
			set {_all} to "{@color}"
		send " "
		send " &7&l------- {@color}&lMERCHANT &7&l--------"
		send " "
		send formatted "  &8[<tooltip:{@color}Change mode to buy><command:/merchant %{sessionid::%player%}% buy %arg-3%>%{_buy}%&lBUY<reset>&8/<tooltip:{@color}Change mode to sell><command:/merchant %{sessionid::%player%}% sell1 %arg-3%>%{_sell}%&lSELL<reset>&8] &8[<tooltip:{@color}x1><command:/merchant %{sessionid::%player%}% %arg-2% 1>%{_1}%x1<reset> &8| <tooltip:{@color}x5><command:/merchant %{sessionid::%player%}% %arg-2% 5>%{_5}%x5<reset> &8| <tooltip:{@color}x32><command:/merchant %{sessionid::%player%}% %arg-2% 32>%{_32}%x32<reset> &8| <tooltip:{@color}ALL><command:/merchant %{sessionid::%player%}% %arg-2% all>%{_all}%ALL<reset>&8]"
		send " "
		
		set {_page::*} to arg-2 parsed as "sell%number%"

		if arg-2 is "buy":
			stop
		else if arg-2 contains "sell":
			if arg-4 is set:
				loop all items in inventory of player:
					set {_moreword} to arg-4
					replace all "_" with " " in {_moreword}
					"%type of loop-value%" is "%{_moreword}%"
					set {_amount} to amount of loop-value in inventory of player
					set {_name} to subtext of uncolored name of loop-value from characters 10 to (length of uncolored name of loop-value)
					set {_worth::*} to uncolored line 3 of lore of loop-value parsed as "%text% %number% %text%"
					if arg-3 is "all":
						set {_n} to amount of loop-value in inventory of player
					else if arg-3 parsed as number is less than or equal to {_amount}:
						set {_n} to arg-3 parsed as number
					else:
						set {_n} to {_amount}
					remove {_n} of loop-value from inventory of player
					set {_coins} to {_worth::2} * {_n}
					coins("add", player, {_coins})
					set {_message} to "   &7Sold {@color}%{_n}% %{_name}% &7for {@color}%{_coins}% &7coins"
					
			else:
				set {_message} to " "
			loop all items in inventory of player:
				set {_lore::*} to lore of loop-item
				loop {_lore::*}:
					loop-value-2 contains "Sell"
					add loop-item to {_sellable::*}
					exit loop

			if size of {_sellable::*} is greater than 7:
				set {_indexStart} to ({_page::1} * 8) - 7
				set {_current} to 1
				set {_lastPage} to mod(size of {_sellable::*}, 8)
				set {_blank} to 8 - {_lastPage}
				loop {_sellable::*}:
					add 1 to {_current}
					{_current} is greater than {_indexStart}
					{_current} is less than or equal to {_indexStart} + 8
					
					set {_oneword} to "%type of loop-value%"
					replace all " " with "_" in {_oneword}
					
					set {_worth::*} to uncolored line 3 of lore of loop-value parsed as "%text% %number% %text%"
					send formatted "       <tooltip: {@color}&lWORTH &7%{_worth::2}% coins each%nl% &8┃ {@color}%{_worth::2} * 1% &7coins @ x1%nl% &8┃ {@color}%{_worth::2} * 5% &7coins @ x5%nl% &8┃ {@color}%{_worth::2} * 32% &7coins @ x32%nl% &8╹ {@color}%{_worth::2} * amount of loop-value in inventory of player% &7coins @ MAX &8(&7x%amount of loop-value in inventory of player%&8)><command:/merchant %{sessionid::%player%}% %arg-2% %arg-3% %{_oneword}%>%name of loop-value% &8| &7&ox%amount of loop-value in inventory of player%<reset>"
					if (size of {_sellable::*} - {_lastPage}) / 8 is less than ({_current} - 1) / 8:	
						loop {_blank} times:
							send " "
						exit loop
			else:
				set {_blank} to 8 - size of {_sellable::*}
				replace all " " with "_" in {_oneword}
				loop {_sellable::*}:
					set {_oneword} to "%type of loop-value%"
					set {_worth::*} to uncolored line 3 of lore of loop-value parsed as "%text% %number% %text%"
					send formatted "       <tooltip: {@color}&lWORTH &7%{_worth::2}% coins each%nl% &8┃ {@color}%{_worth::2} * 1% &7coins @ x1%nl% &8┃ {@color}%{_worth::2} * 5% &7coins @ x5%nl% &8┃ {@color}%{_worth::2} * 32% &7coins @ x32%nl% &8╹ {@color}%{_worth::2} * amount of loop-value in inventory of player% &7coins @ MAX &8(&7x%amount of loop-value in inventory of player%&8)><command:/merchant %{sessionid::%player%}% %arg-2% %arg-3% %{_oneword}%>%name of loop-value% &8| &7&ox%amount of loop-value in inventory of player%<reset>"
				loop {_blank} times:
					send " "

		set {_prevpage} to {_page::1} - 1
		set {_back} to "{@color}"
		if {_prevpage} is less than 1:
			set {_back} to "&8"
			set {_prevpage} to 1
		set {_nextpage} to {_page::1} + 1
		set {_forw} to "{@color}"
		if {_nextpage} is greater than or equal to ceil(size of {_sellable::*} / 8) + 1:
			set {_forw} to "&8"
			if {_sellable::*} is set:
				set {_nextpage} to ceil(size of {_sellable::*} / 8)
			else:
				set {_nextpage} to 1

		send " "
		send formatted "            <tooltip:{@color}Previous Page><command:/merchant %{sessionid::%player%}% sell%{_prevpage}% %arg-3%>%{_back}%<<<<reset>  &7Page: &f%{_page::1}%  <tooltip:{@color}Next Page><command:/merchant %{sessionid::%player%}% sell%{_nextpage}% %arg-3%>%{_forw}%>>>"
		send " "
		send {_message}
		send " "
		send " &7&l------------------------- "
		send " "