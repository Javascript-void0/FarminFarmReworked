options:
	color: <##B4C788>
	prefix: &8[<##B4C788>&lUMORIA&8]&f
	permission: &7Insufficient Permissions
	admin: &8[<##B4C788>&lADMIN&8]&r
	world: world

function boneWarrior(loc: location) :: entity:
	spawn skeleton at {_loc}
	set {_e} to last spawned mob
	set {m_maxhealth::%{_e}%} to 50
	set {m_damage::%{_e}%} to 1
	set {m_health::%{_e}%} to 50
	set name of {_e} to "&8[{@color}:L100&8] &fBone:Warrior &7({@color}%{m_health::%{_e}%}%{@color}/%{m_maxhealth::%{_e}%}% ❤&7)"
	set helmet of {_e} to bone
	set chestplate of {_e} to iron chestplate
	set leggings of {_e} to leather leggings
	dye leggings of {_e} white
	set boots of {_e} to iron boots
	set held item of {_e} to bone
	enchant chestplate of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant leggings of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant boots of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant held item of {_e} with sharpness 7
	return {_e}

function boneArcher(loc: location) :: entity:
	spawn skeleton at {_loc}
	set {_e} to last spawned mob
	set {m_maxhealth::%{_e}%} to 20
	set {m_damage::%{_e}%} to 2
	set {m_health::%{_e}%} to 20
	set name of {_e} to "&8[{@color}:L100&8] &fBone:Archer &7({@color}%{m_health::%{_e}%}%{@color}/%{m_maxhealth::%{_e}%}% ❤&7)"
	set helmet of {_e} to feather
	set chestplate of {_e} to iron chestplate
	set leggings of {_e} to leather leggings
	dye leggings of {_e} white
	set boots of {_e} to iron boots
	set held item of {_e} to bow
	enchant helmet of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant chestplate of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant leggings of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant boots of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant held item of {_e} with power 7
	return {_e}

function orcCaptain(loc: location) :: entity:
	spawn zombie at {_loc}
	set {_e} to last spawned mob
	set {m_maxhealth::%{_e}%} to 50
	set {m_damage::%{_e}%} to 1
	set {m_health::%{_e}%} to 50
	set name of {_e} to "&8[{@color}:L100&8] &fOrc:Captain &7({@color}%{m_health::%{_e}%}%{@color}/%{m_maxhealth::%{_e}%}% ❤&7)"
	set helmet of {_e} to fern
	set chestplate of {_e} to leather chestplate
	dye chestplate of {_e} green
	set leggings of {_e} to netherite leggings
	set boots of {_e} to leather boots
	dye boots of {_e} lime
	set held item of {_e} to iron sword
	enchant helmet of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant chestplate of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant leggings of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant boots of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant held item of {_e} with power 7
	return {_e}

function orcWarrior(loc: location) :: entity:
	spawn zombie at {_loc}
	set {_e} to last spawned mob
	set {m_maxhealth::%{_e}%} to 50
	set {m_damage::%{_e}%} to 1
	set {m_health::%{_e}%} to 50
	set name of {_e} to "&8[{@color}:L100&8] &fOrc:Warrior &7({@color}%{m_health::%{_e}%}%{@color}/%{m_maxhealth::%{_e}%}% ❤&7)"
	set helmet of {_e} to dark prismarine slab
	set chestplate of {_e} to leather chestplate
	dye chestplate of {_e} green
	set leggings of {_e} to netherite leggings
	set boots of {_e} to leather boots
	dye boots of {_e} lime
	set held item of {_e} to stone sword
	enchant helmet of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant chestplate of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant leggings of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant boots of {_e} with protection 5, fire protection 3, blast protection 3, and unbreaking 5
	enchant held item of {_e} with power 7
	return {_e}

on combust:
	if event-entity is zombie or skeleton:
		cancel event

on spawn of zombie:
	if {mobcap} is false:
		if block at event-location is netherite block:
			set block at event-location to air
			stop
		else:
			cancel event
	else:
		cancel event

on spawn of skeleton:
	if {mobcap} is false:
		if block at event-location is netherite block:
			set block at event-location to air
			stop
		else:
			cancel event
	else:
		cancel event

on spawn of creeper:
	cancel event
on spawn of enderman:
	cancel event
on spawn of witch:
	cancel event
on spawn of spider:
	cancel event
on spawn of slime:
	cancel event
on spawn of horse:
	cancel event
on spawn of sheep:
	cancel event
on spawn of pig:
	cancel event
on spawn of chicken:
	cancel event
on spawn of cow:
	cancel event
on spawn of donkey:
	cancel event
on spawn of bat:
	cancel event

# every 10 seconds:
# 	loop all entities:
# 		loop-entity is not a player
# 		if "%region at loop-entity%" contains "spawn":
# 			delete loop-entity
# 			delete {m_maxhealth::%loop-entity%}
# 			delete {m_health::%loop-entity%}
# 			delete {m_damage::%loop-entity%}
# 	set {_p} to number of players
# 	set {_d} to number of entities - {_p}
# 	if {_d} is greater than 200:
# 		set {mobcap} to true
# 	else:
# 		set {mobcap} to false

on load:
	loop all entities:
		loop-entity is not a player
		if {m_maxhealth::%loop-entity%} is not set:
			delete loop-entity
		else if {m_health::%loop-entity%} is not set:
			delete loop-entity
		else if {m_damage::%loop-entity%} is not set:
			delete loop-entity