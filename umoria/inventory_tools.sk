options:
	color: <##B4C788>
	prefix: &8[<##B4C788>&lUMORIA&8]&7
	permission: &7Insufficient Permissions
	admin: &8[<##B4C788>&lADMIN&8]&7
	coins: &7Insufficient <##B4C788>Coins
	wrath: &7Insufficient <##B4C788>Wrath
	world: world

	line1: 15
	line2: 16
	line3: 17
	line4: 18

on load: 
	set {tooltips::enchantment::sharpness} to "{@color}+5 damage"
	set {tooltips::enchantment::power} to "{@color}+5 damage"
	set {tooltips::enchantment::looting} to "{@color}+1 max mob drops"
	set {tooltips::enchantment::%{_ench3::1}%} to "{@color}Multiply exp drops"
	set {tooltips::enchantment::%{_ench4::1}%} to "{@color}none"

# function toolCompatible(i: item, e: text) :: boolean:
# 	if {_e} is "%{_ench3::1}%" or "%{_ench4::1}%":
# 		return true
# 	else if {_i} is sword:
# 		{_e} is "sharpness" or "looting"
# 		return true
# 	else if {_i} is bow:
# 		{_e} is "power" or "looting"
# 		return true
# 	else if {_i} is pickaxe or hoe:
# 		{_e} is "efficiency" or "fortune"
# 		return true
# 	else if {_i} is shield:
# 		{_e} is "%{_ench2::1}%" or "%{_ench1::1}%"
# 		return true
# 	else if itemCheck({_i}) is true:
# 		return true
# 	return false

on right click:
	player is sneaking
	itemCheck(player's held item) is true
	cancel event
	make player execute "/enchant"

command /enchant [<text>]:
	trigger:
		if arg-1 contains "armor":
			set {_loop::*} to 36, 37, 38, and 39
		else if arg-1 contains "shield":
			set {_loop::*} to 40
		else if held item of player is sword or bow or pickaxe or hoe:
			set {_hotbar::*} to 0, 1, 2, 3, 4, 5, 6, 7, and 8
			loop {_hotbar::*}:
				if 1 of slot loop-value of player is 1 of held item of player:
					add loop-value to {_loop::*}
					exit loop
		else:
			send "{@prefix} &7This item can't be enchanted"
			stop
		
		loop {_loop::*}:

			# set {_lore::*} to lore of slot loop-value of player
			# loop {_lore::*}:
			# 	if loop-value-2 contains "ENCHANTS":
			# 		set {_n} to loop-index-2 parsed as number
			# 		set {_enchLines::*} to {_n} + 1, {_n} + 2, {_n} + 3, {_n} + 4
			# 		exit loop

			set {_ench1::*} to uncolored line {@line1} of lore of slot loop-value of player parsed as " ┃ %text%: %number%"
			set {_ench2::*} to uncolored line {@line2} of lore of slot loop-value of player parsed as " ┃ %text%: %number%"
			set {_ench3::*} to uncolored line {@line3} of lore of slot loop-value of player parsed as " ┃ %text%: %number%"
			set {_ench4::*} to uncolored line {@line4} of lore of slot loop-value of player parsed as " ╹ %text%: %number%"

			set {_totalAvailable::*} to uncolored line 2 of lore of slot loop-value of player parsed as " ┃ Level: %number%"
			set {_totalAvailable} to {_totalAvailable::1} - 1
			set {_used} to ({_ench1::2} + {_ench2::2} + {_ench3::2} + {_ench4::2}) - 4
			set {_available} to {_totalAvailable} - {_used}

			set {_message} to " "
			if {_available} is less than 1:
				arg-1 contains "1" or "2" or "3" or "4"
				set {_message} to "   &7Insufficient points"
			else if arg-1 contains "1" or "2" or "3" or "4":
				set {_level} to {_ench%arg-1%::2} + 1
				if arg-1 contains "1":
					set {_enchantment} to "%{_ench%arg-1%::1}% %{_level}%" parsed as enchantment type
					set {_newLore} to " &8┃ &7%{_ench%arg-1%::1}%: &f%{_level}%"
					set {_line} to {@line1}
				else if arg-1 contains "2":
					set {_enchantment} to "%{_ench%arg-1%::1}% %{_level}%" parsed as enchantment type
					set {_newLore} to " &8┃ &7%{_ench%arg-1%::1}%: &f%{_level}%"
					set {_line} to {@line2}
				else if arg-1 contains "3":
					set {_enchantment} to "%{_ench%arg-1%::1}% %{_level}%" parsed as enchantment type
					set {_newLore} to " &8┃ &7%{_ench%arg-1%::1}%: &f%{_level}%"
					set {_line} to {@line3}
				else if arg-1 contains "4":
					set {_enchantment} to "curse of binding %{_level}%" parsed as enchantment type
					set {_newLore} to " &8╹ &7%{_ench%arg-1%::1}%: &f%{_level}%"
					set {_line} to {@line4}
				set line {_line} of lore of slot loop-value of player to {_newLore}
				enchant slot loop-value of player with {_enchantment}
				set {_message} to "   &7Enchanted with {@color}%{_ench%arg-1%::1}% %{_level}%"
				add 1 to {_ench%arg-1%::2}
				remove 1 from {_available}

		send " "
		send " &7&l------- {@color}&lENCHANT &7&l-------"
		send " "
		send "   &7Available: &f%{_available}%"
		send " "
		if arg-1 contains "armor" or "shield":
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant %arg-1%1>[&a+&8]<reset> &8┃ <tooltip:%{tooltips::enchantment::%{_ench1::1} in lower case%}%>&7%{_ench1::1}%<reset>: &f%{_ench1::2}%"
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant %arg-1%2>[&a+&8]<reset> &8┃ <tooltip:%{tooltips::enchantment::%{_ench2::1} in lower case%}%>&7%{_ench2::1}%<reset>: &f%{_ench2::2}%"
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant %arg-1%3>[&a+&8]<reset> &8┃ <tooltip:%{tooltips::enchantment::%{_ench3::1} in lower case%}%>&7%{_ench3::1}%<reset>: &f%{_ench3::2}%"
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant %arg-1%4>[&a+&8]<reset> &8╹ <tooltip:%{tooltips::enchantment::%{_ench4::1} in lower case%}%>&7%{_ench4::1}%<reset>: &f%{_ench4::2}%"
		else:
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant 1>[&a+&8]<reset> &8┃ <tooltip:%{tooltips::enchantment::%{_ench1::1} in lower case%}%>&7%{_ench1::1}%<reset>: &f%{_ench1::2}%"
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant 2>[&a+&8]<reset> &8┃ <tooltip:%{tooltips::enchantment::%{_ench2::1} in lower case%}%>&7%{_ench2::1}%<reset>: &f%{_ench2::2}%"
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant 3>[&a+&8]<reset> &8┃ <tooltip:%{tooltips::enchantment::%{_ench3::1} in lower case%}%>&7%{_ench3::1}%<reset>: &f%{_ench3::2}%"
			send formatted " &8<tooltip:{@color}Click to enchant><command:/enchant 4>[&a+&8]<reset> &8╹ <tooltip:%{tooltips::enchantment::%{_ench4::1} in lower case%}%>&7%{_ench4::1}%<reset>: &f%{_ench4::2}%"
		send " "
		send " "
		send " "
		send " "
		send " "
		send " "
		send " "
		send {_message}
		send " "
		send " &7&l------------------------- "
		send " "
		stop