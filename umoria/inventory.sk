options:
	color: <##B4C788>
	prefix: &8[<##B4C788>&lUMORIA&8]&7
	permission: &7Insufficient Permissions
	admin: &8[<##B4C788>&lADMIN&8]&7
	coins: &7Insufficient <##B4C788>Coins
	wrath: &7Insufficient <##B4C788>Wrath
	world: world

function inventoryRound(n: number, to: number) :: number:
	return floor(({_n} * 10^{_to}) + 0.5) / 10^{_to}

function inventoryFormat(n: number) :: text:
	set {_data} to "f,18|e,15|d,12|c,9|b,6|a,3"
	loop split {_data} at "|":
		set {_s::*} to split loop-value at ","
		{_n} >= 10 ^ {_s::2} parsed as number
		set {_nn} to inventoryRound({_n} / 10 ^ {_s::2} parsed as number, 1)
		return "%{_nn}%%{_s::1}%"
	return "%{_n}%" 

function stats(p: player):
	set metadata tag "Stats" of {_p} to chest inventory with 3 rows named "&8Statistics: %{_p}%"
	set slot 10 of metadata tag "Stats" of {_p} to head of {_p} named "&8[{@color}:L%{p_level::%{_p}%}%&8] {@color}%display name of {_p}%" with lore "{@color}Playtime: &7%time played of {_p}%"
	set {_coins} to inventoryFormat({p_coins::%{_p}%})
	set {_totalcoins} to inventoryFormat({p_totalcoins::%{_p}%})
	set slot 12 of metadata tag "Stats" of {_p} to gold block named "{@color}&lCOINS" with lore "&7Current: {@color}%{_coins}% &7coins" and "&7Total: {@color}%{_totalcoins}% &7coins"
	set {_wrath} to inventoryFormat({p_wrath::%{_p}%})
	set {_totalwrath} to inventoryFormat({p_totalwrath::%{_p}%})
	set slot 13 of metadata tag "Stats" of {_p} to bell named "{@color}&lWRATH" with lore "&7Current: {@color}%{_wrath}% &7wrath" and "&7Total: {@color}%{_totalwrath}% &7wrath"
	set slot 14 of metadata tag "Stats" of {_p} to nether star named "{@color}&lVIRTUE" with lore "&7Current: {@color}%{p_virtue::%{_p}%}%%%" and "&7 > Depends on your current gear"
	set slot 15 of metadata tag "Stats" of {_p} to netherite sword named "{@color}&lCOMBAT" with lore "&7Kills: {@color}%{p_kill::%{_p}%}% &7mobs killed" and "&7Deaths: {@color}%{p_death::%{_p}%}% &7deaths" with all flags hidden
	open (metadata tag "Stats" of {_p}) to {_p}

command /stats [<offline player>]:
	trigger:
		if arg-1 is not set:
			stats(player)
		else:
			stats(arg-1)

on right click:
	if player's tool is pickaxe or axe or shovel:
		if player's tool is wooden axe:
			stop
	else if name of player's tool is "{@color}&lMENU":
		menu(player)

on right click with light gray stained glass or lime stained glass or light blue stained glass or black stained glass:
	cancel event
	helmet of player is air
	set {_hel} to player's held item
	remove 1 of player's tool from player's inventory
	set player's helmet to {_hel}

command /menu:
	trigger:
		menu(player)

on inventory click: 
	event-inventory = (metadata tag "Menu" of player)
	if clicked slot is 0:
		cancel event
		pvpToggle(player)
		menu(player)
	else if clicked slot is 1:
		cancel event
		waitToggle(player)
		menu(player)
	else if clicked slot is 8:
		cancel event
		set {_waited} to difference between {daily.%player%.lastused} and now
		if {_waited} is less than 24 hours:
			send "{@prefix} &7Your daily reward was already claimed at {@color}%{daily.%player%.lastused}%"
			menu(player)
		else:
			set {daily.%player%.lastused} to now
			send "{@prefix} &7You claimed your daily reward at {@color}%now%"
			add 100 to {p_wrath::%player%}
			menu(player)
	else if clicked slot is 2:
		cancel event
		stats(player)

function menu(p: player):
	set metadata tag "Menu" of {_p} to chest inventory with 3 rows named "&8Menu"
	if {pvp::%{_p}%} is false:
		set slot 0 of metadata tag "Menu" of {_p} to red dye named "{@color}&lPVP &7Disabled" with lore " &8╹ &7Enable (/pvp)"
	else:
		set slot 0 of metadata tag "Menu" of {_p} to lime dye named "{@color}&lPVP &7Enabled" with lore " &8╹ &7Disable (/pvp)"
	if {wait.%{_p}%} is false:
		set slot 1 of metadata tag "Menu" of {_p} to red dye named "{@color}&lWAIT &7Disabled" with lore " &8╹ &7Enable (/wait)"
	else:
		set slot 1 of metadata tag "Menu" of {_p} to lime dye named "{@color}&lWAIT &7Enabled" with lore " &8╹ &7Disable (/wait)"
	set {_waited} to difference between {daily.%{_p}%.lastused} and now
	set {_next} to 1 day after {daily.%{_p}%.lastused}
	if {_waited} is less than 24 hours:
		set slot 8 of metadata tag "Menu" of {_p} to red stained glass named "{@color}&lDAILY" with lore "&7Next Avaiable: %{_next}%" and "&8┃ &7Already {@color}Claimed " and "&8╹ {@color}+100 &7Wrath"
	else:
		if {_waited} is not set:
			set {_m} to "Never Used"
		else:
			set {_m} to "%{daily.%{_p}%.lastused}%"
		set slot 8 of metadata tag "Menu" of {_p} to lime stained glass named "{@color}&lDAILY" with lore "&7Last Used: %{_m}%" and " &8┃ &7Ready to {@color}Claim" and " &8╹ {@color}+100 &7Wrath"

	set {daily.%{_p}%.lastused} to 1 day before {daily.%{_p}%.lastused}
	set slot 2 of metadata tag "Menu" of {_p} to book named "{@color}&lSTATS" with lore " &8╹ &7view"
		# stats(player)
	open (metadata tag "Menu" of {_p}) to {_p}

on inventory click:	
	if {unlock.%player%} is set:
		stop
	if clicked slot is 8:
		cancel event
		menu(player)
	# if name of event-inventory is not "Crafting":
	# 	cancel event
	# 	stop
	gamemode of player is survival
	if clicked slot is 36 or 37 or 38 or 39:
		clicked type is middle mouse button
		armorMenu(player)
	else:
		cancel event
		# if clicked type is right mouse button:
		# 	armorUpgrade(player)
		# else if clicked type is left mouse button:
		# 	if clicked item is black stained glass:
		# 		send "{@prefix} Can't promote any farther!"
		# 	else:
		# 		set {_s} to index of event-slot
		# 		armorPromote(player, clicked item, {_s})

function armorMenu(p: player):
	set metadata tag "armorMenu" of {_p} to hopper inventory named "&8Armor"
	set slot 1 of metadata tag "armorMenu" of {_p} to smithing table named "{@color}&lUPGRADE" with lore " &8┃ &7Upgrade your armor to ..." and " &8╹ &7"
	set slot 3 of metadata tag "armorMenu" of {_p} to anvil named "{@color}&lPROMOTE" with lore " &8┃ &7Promote your armor for ..." and " &8╹ &7"
	open (metadata tag "armorMenu" of {_p}) to {_p}

on inventory click:
	event-inventory = (metadata tag "armorMenu" of player)
	if clicked slot is 1:
		armorUpgrade(player)
	else if clicked slot is 3:
		armorPromote(player)

function armorUpgrade(p: player):
	set metadata tag "armorUpgrade" of {_p} to chest inventory with 4 rows named "&8Upgrades"
	set slot 0 of metadata tag "armorUpgrade" of {_p} to helmet of {_p}
	set slot 9 of metadata tag "armorUpgrade" of {_p} to chestplate of {_p}
	set slot 18 of metadata tag "armorUpgrade" of {_p} to leggings of {_p}
	set slot 27 of metadata tag "armorUpgrade" of {_p} to boots of {_p}
	open (metadata tag "armorUpgrade" of {_p}) to {_p}

command /promote:
	trigger:
		armorPromote(player)

function armorPromote(p: player):
	set metadata tag "armorPromote" of {_p} to hopper inventory named "&8Promote"
	set slot 0 of metadata tag "armorPromote" of {_p} to helmet of {_p}
	set slot 1 of metadata tag "armorPromote" of {_p} to chestplate of {_p}
	if helmet of {_p} is light gray stained glass:
		set slot 2 of metadata tag "armorPromote" of {_p} to iron ingot named "{@color}&lPROMOTE" with lore " &8┃ &7Next: " and " " and " {@color}REQUIREMENTS" and " &8┃ &7Coins: &f" and " &8┃ &7Level: " and " &8┃ &7Protection: " and " "
	if helmet of {_p} is lime stained glass:
		set slot 2 of metadata tag "armorPromote" of {_p} to emerald named "{@color}&lPROMOTE" with lore " &8┃ &7Next: " and " " and " {@color}REQUIREMENTS" and " &8┃ &7Coins: &f" and " &8┃ &7Level: " and " &8┃ &7Protection: " and " "
	if helmet of {_p} is light blue stained glass:
		set slot 2 of metadata tag "armorPromote" of {_p} to diamond named "{@color}&lPROMOTE" with lore " &8┃ &7Next: " and " " and " {@color}REQUIREMENTS" and " &8┃ &7Coins: &f" and " &8┃ &7Level: " and " &8┃ &7Protection: " and " "
	if helmet of {_p} is orange stained glass:
		set slot 2 of metadata tag "armorPromote" of {_p} to copper ingot named "{@color}&lPROMOTE" with lore " &8┃ &7Next: " and " " and " {@color}REQUIREMENTS" and " &8┃ &7Coins: &f" and " &8┃ &7Level: " and " &8┃ &7Protection: " and " "
	if helmet of {_p} is black stained glass:
		set slot 2 of metadata tag "armorPromote" of {_p} to netherite ingot named "{@color}&lPROMOTE" with lore " &8┃ &7Next: " and " " and " {@color}REQUIREMENTS" and " &8┃ &7Coins: &f" and " &8┃ &7Level: " and " &8┃ &7Protection: " and " "
	set slot 3 of metadata tag "armorPromote" of {_p} to leggings of {_p}
	set slot 4 of metadata tag "armorPromote" of {_p} to boots of {_p}
	open (metadata tag "armorPromote" of {_p}) to {_p}
	# broadcast "test"
	# set metadata tag "armorPromote" of {_p} to chest inventory with 4 rows named "&8Promote"
	# broadcast "test"
	# broadcast "test %{_i}%"
	# set {_name} to name of {_n}
	# broadcast "%{_name}%"
	# if {_name} contains "&8[&c::&7::::::::&8]":
	# 	broadcast "test"
	# 	if {_i} is light gray stained glass:
	# 		set slot 4 of metadata tag "armorPromote" of {_p} to {2_helmet}
	# 			# set player's helmet to {2_helmet}
	# 			# close player's inventory
	# 	else if {_i} is chestplate:
	# 		set slot 4 of metadata tag "armorPromote" of {_p} to {2_chestplate}
	# 			# set player's helmet to {2_chestplate}
	# 			# close player's inventory
	# 	else if {_i} is leggings:
	# 		set slot 4 of metadata tag "armorPromote" of {_p} to {2_leggings}
	# 			# set player's leggings to {2_leggings}
	# 			# close player's inventory
	# 	else if {_i} is boots:
	# 		set slot 4 of metadata tag "armorPromote" of {_p} to {2_boots}
	# 			# set player's boots to {2_boots}
	# 			# close player's inventory
	# else if name of {_i} contains "&7::::::":
	# 	set slot 4 of metadata tag "armorPromote" of {_p} to {3_helmet}
	# else if name of {_i} contains "&7::::":
	# 	set slot 4 of metadata tag "armorPromote" of {_p} to {4_helmet}
	# else if name of {_i} contains "&7::":
	# 	set slot 4 of metadata tag "armorPromote" of {_p} to {5_helmet}
	# open (metadata tag "armorPromote" of {_p}) to {_p}